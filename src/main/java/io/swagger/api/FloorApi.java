/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Floor;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-02-28T13:19:30.258Z")

@Api(value = "floor", description = "the floor API")
@RequestMapping(value = "/v2")
public interface FloorApi {

    @ApiOperation(value = "Add a new Floor details", nickname = "addFloor", notes = "", tags={ "Floor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/floor",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addFloor(@ApiParam(value = "Floor details that needs to be added to the Company" ,required=true )  @Valid @RequestBody Floor body);


    @ApiOperation(value = "Deletes a Floor", nickname = "deleteFloor", notes = "", tags={ "Floor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Floor not found") })
    @RequestMapping(value = "/floor/{floorId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteFloor(@ApiParam(value = "Floor id to delete",required=true) @PathVariable("floorId") Long floorId);


    @ApiOperation(value = "Find Floor by ID", nickname = "getFloorById", notes = "Returns a single Floor Details", response = Floor.class, tags={ "Floor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Floor.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Floor not found") })
    @RequestMapping(value = "/floor/{floorId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Floor> getFloorById(@ApiParam(value = "ID of Floor to return",required=true) @PathVariable("floorId") Long floorId);


    @ApiOperation(value = "Update an existing floor", nickname = "updateFloor", notes = "", tags={ "Floor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/floor",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateFloor(@ApiParam(value = "Floor details that needs to be added to the Company" ,required=true )  @Valid @RequestBody Floor body);

}
